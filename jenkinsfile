pipeline {
    agent any 
    environment {
    DOCKERHUB_CREDENTIALS = credentials('valaxy-dockerhub')
    }
    stages { 
        stage('SCM Checkout') {
            steps{
            git 'https://github.com/ravdy/nodejs-demo.git'
            }
        }
            stage('Code Quality Check via SonarQube') {
           steps{
           script{ 
          def scannerHome = tool 'Sonarqube-scanner';
          withSonarQubeEnv("Sonarqube") {
               sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=java-01 -Dsonar.sources=. -Dsonar.css.node=. -Dsonar.host.url=http://52.66.136.187:9000/ -Dsonar.login=71c88ab877007ba1b88fdfd0d2dddef826e6ec64 -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info"
               }
		   
             }
           }
         }

        stage('Build docker image') {
            steps {  
                sh 'docker build -t valaxy/nodeapp:$BUILD_NUMBER .'
            }
        }
        stage('login to dockerhub') {
            steps{
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('push image') {
            steps{
                sh 'docker push valaxy/nodeapp:$BUILD_NUMBER'
            }
        }
}
post {
        always {
            sh 'docker logout'
        }
    }
}
